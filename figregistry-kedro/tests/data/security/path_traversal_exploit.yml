# Security Testing Configuration: Path Traversal and Filesystem Exploitation Vectors
# 
# This configuration file contains malicious entries designed to test FigureDataSet
# path validation and filesystem boundary enforcement per Section 6.6.8.2 requirements.
# 
# WARNING: This file contains intentionally malicious configurations for security testing.
# These configurations should NEVER be used in production environments and must be
# properly validated and contained within test environments only.
#
# Test Coverage:
# - Directory traversal attacks using relative path sequences
# - Absolute path override attempts to escape project boundaries  
# - Symbolic link exploitation vectors for filesystem access
# - Windows and Unix path injection variants for cross-platform testing
# - Malicious purpose parameter injection targeting unauthorized directories
# - Catalog filepath manipulation with traversal sequences
# - Filesystem metadata injection and system path manipulation
# - Unauthorized directory creation and permission escalation attempts

# =============================================================================
# BASIC PATH TRAVERSAL ATTACK VECTORS
# =============================================================================

basic_path_traversal:
  description: "Basic directory traversal sequences to test path validation"
  
  # Standard Unix-style traversal attempts
  unix_traversal_sequences:
    simple_parent_escape:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "../../../etc/passwd"
      purpose: "system_file_access"
      condition_param: "exploit_condition"
      style_params:
        output_directory: "../../../sensitive_data"
    
    deep_traversal_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"  
      filepath: "../../../../../../../../root/.ssh/id_rsa"
      purpose: "credential_theft"
      save_args:
        directory: "../../../home/admin"
    
    relative_path_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "../../config/database.yml"
      purpose: "config_access"
      condition_param: "../../../environment_secrets"
      
    nested_traversal_complex:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/../../../etc/../var/log/../../root/secret_file.txt"
      purpose: "obfuscated_traversal"
      
  # Windows-style traversal attempts  
  windows_traversal_sequences:
    windows_backslash_escape:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "..\\..\\..\\Windows\\System32\\config\\SAM"
      purpose: "windows_system_access"
      condition_param: "windows_exploit"
      
    windows_drive_letter_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "C:\\..\\..\\Windows\\Temp\\malicious_output.png"
      purpose: "system_drive_access"
      
    windows_unc_path_exploit:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "\\\\server\\share\\..\\..\\sensitive\\data.png"
      purpose: "network_path_injection"
      
    mixed_separator_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "../..\\..\\system/critical/file.png"
      purpose: "mixed_separator_confusion"

# =============================================================================
# ABSOLUTE PATH OVERRIDE ATTACKS
# =============================================================================

absolute_path_overrides:
  description: "Absolute path specifications to bypass relative path restrictions"
  
  system_directories:
    root_directory_access:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/root/unauthorized_figure.png"
      purpose: "root_access"
      condition_param: "admin_bypass"
      
    system_config_access:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/etc/figregistry_bypass.png"
      purpose: "system_config_injection"
      
    tmp_directory_escape:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/tmp/../../../home/user/.bashrc"
      purpose: "tmp_escape_vector"
      
    var_log_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/var/log/../../etc/shadow.png"
      purpose: "log_directory_exploit"
      
  user_directories:
    home_directory_breach:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/home/admin/secret_research.png"
      purpose: "user_data_access"
      condition_param: "/home/admin/sensitive_params"
      
    ssh_key_theft_attempt:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/home/user/.ssh/authorized_keys.png"
      purpose: "ssh_credential_access"
      
  application_directories:
    kedro_config_override:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/opt/kedro/conf/secrets.yml"
      purpose: "application_config_breach"
      
    python_site_packages_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/usr/local/lib/python3.11/site-packages/malicious.py"
      purpose: "code_injection_attempt"

# =============================================================================
# SYMBOLIC LINK EXPLOITATION VECTORS
# =============================================================================

symbolic_link_attacks:
  description: "Symbolic link creation and exploitation for filesystem boundary bypass"
  
  symlink_creation_attempts:
    relative_symlink_exploit:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/symlink_to_etc"
      purpose: "symlink_creation"
      save_args:
        create_symlink: "../../../etc"
        follow_symlinks: true
        
    absolute_symlink_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/system_link.png"
      purpose: "symlink_to_root"
      condition_param: "create_symlink:/root"
      
    nested_symlink_chain:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/link1/../link2/../../../sensitive_area/file.png"
      purpose: "symlink_chain_exploit"
      
  symlink_following_exploits:
    follow_malicious_symlink:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/existing_symlink_to_sensitive/figure.png"
      purpose: "symlink_follow_exploit"
      save_args:
        follow_symlinks: true
        
    race_condition_symlink:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/race_condition_target.png"
      purpose: "symlink_race_condition"
      style_params:
        pre_save_action: "create_symlink_to_sensitive"

# =============================================================================
# MALICIOUS PURPOSE PARAMETER INJECTION
# =============================================================================

purpose_parameter_attacks:
  description: "Malicious purpose parameters targeting unauthorized directory access"
  
  directory_creation_exploits:
    unauthorized_directory_creation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "legitimate_file.png"
      purpose: "../../../unauthorized_access"
      condition_param: "legitimate_condition"
      
    system_directory_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/figure.png"
      purpose: "/etc/figregistry_malicious_purpose"
      
    nested_purpose_traversal:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/test.png"
      purpose: "../../config/../../../sensitive/purpose_inject"
      
  purpose_based_path_manipulation:
    purpose_override_filepath:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/normal.png"
      purpose: "../../../../root/malicious_purpose"
      condition_param: "normal_condition"
      style_params:
        purpose_directory_override: "/unauthorized/location"
        
    purpose_metadata_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/figure.png"
      purpose: "exploitconfiginjection"
      condition_param: "metadata_inject:../../../etc/passwd"

# =============================================================================
# CATALOG FILEPATH MANIPULATION
# =============================================================================

catalog_manipulation_attacks:
  description: "Malicious catalog entry manipulations with directory traversal"
  
  filepath_parameter_injection:
    parameter_substitution_exploit:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "${malicious_base_path}/../../../etc/sensitive_catalog.png"
      purpose: "parameter_injection"
      condition_param: "${system_access_param}"
      
    environment_variable_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "${HOME}/../../../root/.ssh/catalog_exploit.png"
      purpose: "env_var_exploitation"
      
    nested_parameter_traversal:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "${base_path}/${nested_param}/../../../sensitive_area/file.png"
      purpose: "nested_param_exploit"
      
  catalog_metadata_injection:
    versioned_path_manipulation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/versioned/../../../../../../etc/passwd"
      purpose: "versioned_exploit"
      versioned: true
      version: "../../../system_version"
      
    save_args_path_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/normal.png"
      purpose: "legitimate"
      save_args:
        bbox_inches: "tight"
        directory_override: "../../../unauthorized"
        metadata:
          filepath_override: "/etc/shadow"
          
    style_params_directory_override:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/figure.png"
      purpose: "presentation"
      style_params:
        output.directory: "../../../sensitive_style_dir"
        figure.savefig.directory: "/root/style_exploit"

# =============================================================================
# FILESYSTEM METADATA INJECTION ATTACKS  
# =============================================================================

metadata_injection_attacks:
  description: "Filesystem metadata manipulation and system path injection vectors"
  
  file_permission_exploits:
    permission_escalation_attempt:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/normal.png"
      purpose: "presentation"
      save_args:
        file_permissions: "777"
        owner_override: "root"
        group_override: "admin"
        setuid_bit: true
        
    acl_manipulation_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/acl_exploit.png"
      purpose: "exploratory"
      style_params:
        file_acl: "user::rwx,group::rwx,other::rwx,mask::rwx"
        security_context: "unconfined_u:object_r:admin_home_t:s0"
        
  system_metadata_injection:
    extended_attributes_exploit:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/xattr_exploit.png"
      purpose: "publication"
      save_args:
        extended_attributes:
          "security.capability": "+ep"
          "user.malicious": "../../../etc/passwd"
          
    filesystem_flags_manipulation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/flags.png"
      purpose: "exploratory"
      condition_param: "flag_exploit"
      style_params:
        file_flags: "immutable,append_only"
        mount_options_override: "nosuid,nodev,noexec"

# =============================================================================
# WINDOWS-SPECIFIC PATH INJECTION VARIANTS
# =============================================================================

windows_specific_attacks:
  description: "Windows-specific path injection and filesystem manipulation vectors"
  
  windows_path_injection:
    alternate_data_streams:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data\\normal.png:hidden_stream"
      purpose: "windows_ads_exploit"
      condition_param: "ads_injection"
      
    reserved_device_names:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "CON.png"
      purpose: "device_name_exploit"
      
    long_path_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "\\\\?\\C:\\very\\long\\path\\exceeding\\traditional\\limits\\to\\bypass\\validation\\systems\\and\\access\\unauthorized\\areas\\malicious.png"
      purpose: "long_path_bypass"
      
  windows_permission_exploits:
    ntfs_permission_override:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data\\ntfs_exploit.png"
      purpose: "windows_permissions"
      save_args:
        ntfs_permissions: "Everyone:F"
        inheritance_flags: "ContainerInherit,ObjectInherit"
        
    registry_injection_attempt:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data\\registry.png"
      purpose: "registry_exploit"
      style_params:
        registry_override: "HKLM\\SOFTWARE\\Malicious"

# =============================================================================
# UNIX-SPECIFIC PATH INJECTION VARIANTS
# =============================================================================

unix_specific_attacks:
  description: "Unix/Linux-specific path manipulation and privilege escalation vectors"
  
  unix_path_injection:
    proc_filesystem_access:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/proc/self/mem"
      purpose: "proc_fs_exploit"
      condition_param: "memory_access"
      
    dev_filesystem_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/dev/kmem"
      purpose: "kernel_memory_access"
      
    sysfs_manipulation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/sys/class/gpio/export"
      purpose: "hardware_control"
      
  unix_privilege_exploits:
    setuid_binary_creation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/tmp/setuid_exploit"
      purpose: "privilege_escalation"
      save_args:
        mode: "4755"  # setuid root
        
    cgroup_manipulation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/sys/fs/cgroup/memory/malicious/memory.limit_in_bytes"
      purpose: "resource_limit_bypass"

# =============================================================================
# UNAUTHORIZED DIRECTORY CREATION ATTEMPTS
# =============================================================================

directory_creation_exploits:
  description: "Attempts to create unauthorized directories and bypass access controls"
  
  system_directory_creation:
    etc_subdirectory_creation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/etc/malicious_figregistry/exploit.png"
      purpose: "system_dir_creation"
      save_args:
        create_directories: true
        directory_permissions: "755"
        
    opt_application_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/opt/figregistry_backdoor/malicious.png"
      purpose: "application_injection"
      
  user_space_violations:
    other_user_directory:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/home/other_user/unauthorized_figregistry/exploit.png"
      purpose: "user_space_violation"
      condition_param: "cross_user_access"
      
    shared_directory_pollution:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "/usr/share/figregistry_malicious/backdoor.png"
      purpose: "shared_space_pollution"

# =============================================================================
# ADVANCED COMBINED ATTACK VECTORS
# =============================================================================

advanced_combined_attacks:
  description: "Complex attack vectors combining multiple exploitation techniques"
  
  multi_vector_exploits:
    symlink_traversal_combination:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/symlink/../../../etc/passwd"
      purpose: "../../../root/combined_exploit"
      condition_param: "symlink_traverse_condition"
      save_args:
        follow_symlinks: true
        create_symlink: "/sensitive/target"
        
    parameter_injection_traversal:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "${malicious_param}/../../../etc/shadow"
      purpose: "${exploit_purpose}/../../../root"
      condition_param: "${traverse_condition}/../../sensitive"
      style_params:
        output_override: "../../../unauthorized"
        
    unicode_encoding_bypass:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data\u002f\u002e\u002e\u002f\u002e\u002e\u002f\u002e\u002e\u002fetc\u002fpasswd"
      purpose: "unicode_bypass"
      
  timing_and_race_conditions:
    race_condition_symlink_swap:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/race_target.png"
      purpose: "race_condition_exploit"
      save_args:
        pre_save_delay: 0.1
        post_create_action: "swap_to_symlink:/sensitive/target"
        
    concurrent_directory_creation:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "outputs/concurrent_exploit.png" 
      purpose: "concurrent_creation"
      style_params:
        concurrent_workers: 10
        target_directory: "../../../unauthorized"

# =============================================================================
# VALIDATION BYPASS ATTEMPTS
# =============================================================================

validation_bypass_attempts:
  description: "Attempts to bypass path validation and sanitization mechanisms"
  
  encoding_bypass_vectors:
    url_encoding_bypass:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Fetc%2Fpasswd"
      purpose: "url_encoding_bypass"
      
    double_encoding_attack:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data%252F%252E%252E%252Fetc%252Fpasswd"
      purpose: "double_encoding_exploit"
      
    base64_injection:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "ZGF0YS8uLi8uLi8uLi9ldGMvcGFzc3dk"  # base64 encoded traversal
      purpose: "base64_bypass"
      
  null_byte_injection:
    null_terminator_bypass:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/normal.png\x00../../../etc/passwd"
      purpose: "null_byte_injection"
      
    unicode_null_bypass:
      type: "figregistry_kedro.datasets.FigureDataSet"
      filepath: "data/normal.png\u0000../../../etc/shadow"
      purpose: "unicode_null_exploit"

# =============================================================================
# CONFIGURATION VALIDATION MARKERS
# =============================================================================

security_test_metadata:
  description: "Metadata for security test validation and containment"
  
  test_validation_rules:
    - "All filepath parameters must be validated against directory traversal"
    - "Purpose parameters must not allow path injection" 
    - "Condition parameters must be sanitized for path components"
    - "Save args must not permit directory override attacks"
    - "Style parameters must not enable filesystem manipulation"
    - "Versioning must not allow path escape through version strings"
    - "Parameter substitution must be safely bounded"
    - "Symlink following must be controlled and limited"
    - "File permissions must be restricted to safe defaults"
    - "Directory creation must respect security boundaries"
    
  expected_security_behaviors:
    path_traversal_prevention:
      - "Reject any filepath containing ../ sequences"
      - "Reject absolute paths outside project boundaries"
      - "Sanitize all user-provided path components"
      - "Validate resolved paths against allowed directories"
      
    filesystem_boundary_enforcement:
      - "Restrict file operations to project directory tree"
      - "Prevent unauthorized directory creation"
      - "Block access to system-sensitive directories"
      - "Enforce consistent path canonicalization"
      
    parameter_validation:
      - "Validate all catalog parameters for injection attempts"
      - "Sanitize condition parameters before filesystem use"
      - "Restrict purpose parameter to safe directory names"
      - "Block parameter substitution in sensitive contexts"
      
  containment_requirements:
    - "Execute all tests in isolated sandbox environments"
    - "Use temporary filesystems for security testing"
    - "Monitor file system access during test execution"
    - "Validate no unauthorized files created outside test boundaries"
    - "Ensure complete cleanup of test artifacts"
    - "Log all path validation failures for analysis"